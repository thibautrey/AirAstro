#!/bin/bash
set -e

# Script de correction rapide post-installation
# Corrige automatiquement les probl√®mes courants d√©tect√©s

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

# Source des fonctions communes
source "$PROJECT_ROOT/scripts/core/airastro-common.sh"

log_info "üîß Correction rapide des probl√®mes post-installation"
echo

# 1. Installer les modules Python manquants
log_info "=== Installation des modules Python essentiels ==="

PYTHON_MODULES=(
    "numpy"
    "astropy"
    "pyindi-client"
)

for module in "${PYTHON_MODULES[@]}"; do
    if python3 -c "import $module" 2>/dev/null; then
        log_success "Module $module d√©j√† install√©"
    else
        log_info "Installation du module $module"
        if python3 -m pip install --user "$module"; then
            log_success "Module $module install√© avec succ√®s"
        else
            log_warning "Installation utilisateur √©chou√©e, tentative syst√®me"
            if sudo python3 -m pip install "$module"; then
                log_success "Module $module install√© (syst√®me)"
            else
                log_error "Impossible d'installer $module"
            fi
        fi
    fi
done

echo

# 2. Corriger les √©quipements d√©tect√©s
log_info "=== Correction automatique des √©quipements ==="

# Cam√©ras ASI
if lsusb | grep -q "03c3"; then
    log_info "Cam√©ra(s) ZWO ASI d√©tect√©e(s)"
    
    # Installer le module Python zwoasi
    if ! python3 -c "import zwoasi" 2>/dev/null; then
        log_info "Installation du module zwoasi"
        if [ -f "$PROJECT_ROOT/scripts/brands/asi/install-asi-python.sh" ]; then
            "$PROJECT_ROOT/scripts/brands/asi/install-asi-python.sh"
        else
            if python3 -m pip install --user zwoasi; then
                log_success "Module zwoasi install√©"
            else
                log_error "√âchec installation zwoasi"
            fi
        fi
    fi
    
    # Installer le driver INDI
    if ! [ -f "/usr/bin/indi_asi_ccd" ]; then
        log_info "Installation du driver INDI ASI"
        sudo apt-get update -qq
        sudo apt-get install -y indi-asi libasi
    fi
fi

# Cam√©ras QHY
if lsusb | grep -q "1618"; then
    log_info "Cam√©ra(s) QHY d√©tect√©e(s)"
    
    if ! [ -f "/usr/bin/indi_qhy_ccd" ]; then
        log_info "Installation du driver INDI QHY"
        sudo apt-get update -qq
        sudo apt-get install -y indi-qhy
    fi
fi

# Cam√©ras Canon/Nikon
if lsusb | grep -q -E "(04a9|04b0)"; then
    log_info "Cam√©ra(s) Canon/Nikon d√©tect√©e(s)"
    
    if ! [ -f "/usr/bin/indi_canon_ccd" ] && ! [ -f "/usr/bin/indi_nikon_ccd" ]; then
        log_info "Installation du driver INDI GPhoto"
        sudo apt-get update -qq
        sudo apt-get install -y indi-gphoto
    fi
fi

echo

# 3. V√©rifier et corriger les services
log_info "=== V√©rification et correction des services ==="

# Service AirAstro
if ! systemctl is-active --quiet airastro 2>/dev/null; then
    log_info "D√©marrage du service AirAstro"
    sudo systemctl start airastro
    if systemctl is-active --quiet airastro; then
        log_success "Service AirAstro d√©marr√©"
    else
        log_error "Impossible de d√©marrer AirAstro"
    fi
fi

# Service mDNS
if ! systemctl is-active --quiet avahi-daemon 2>/dev/null; then
    log_info "D√©marrage du service mDNS"
    sudo systemctl start avahi-daemon
    if systemctl is-active --quiet avahi-daemon; then
        log_success "Service mDNS d√©marr√©"
    else
        log_error "Impossible de d√©marrer mDNS"
    fi
fi

echo

# 4. Nettoyer et red√©marrer les services
log_info "=== Nettoyage et red√©marrage des services ==="

# Red√©marrer AirAstro pour prendre en compte les nouveaux modules
if systemctl is-active --quiet airastro; then
    log_info "Red√©marrage du service AirAstro"
    sudo systemctl restart airastro
    sleep 2
    if systemctl is-active --quiet airastro; then
        log_success "Service AirAstro red√©marr√©"
    else
        log_error "Probl√®me lors du red√©marrage AirAstro"
    fi
fi

# Forcer la mise √† jour des r√®gles udev
log_info "Mise √† jour des r√®gles udev"
sudo udevadm control --reload-rules
sudo udevadm trigger

echo

# 5. V√©rification finale
log_info "=== V√©rification finale ==="

# Lancer la v√©rification post-installation
if [ -f "$PROJECT_ROOT/scripts/installation/post-install-check.sh" ]; then
    log_info "Ex√©cution de la v√©rification finale"
    "$PROJECT_ROOT/scripts/installation/post-install-check.sh"
else
    log_warning "Script de v√©rification non trouv√©"
fi

echo
log_success "üéâ Correction rapide termin√©e!"
echo
echo "üîÑ Si des probl√®mes persistent:"
echo "   - Red√©marrez le syst√®me: sudo reboot"
echo "   - V√©rifiez les logs: journalctl -u airastro"
echo "   - Relancez la v√©rification: $PROJECT_ROOT/scripts/installation/post-install-check.sh"
echo
echo "üìû Support:"
echo "   - Diagnostic ASI: $PROJECT_ROOT/scripts/brands/asi/diagnose-asi.sh"
echo "   - Gestion √©quipements: $PROJECT_ROOT/scripts/equipment-manager.sh"
