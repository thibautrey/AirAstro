#!/bin/bash
set -e

# Script de r√©paration rapide pour AirAstro
# R√©sout les probl√®mes les plus courants en quelques √©tapes

log() { echo -e "\033[1;32m[Quick Fix]\033[0m $*"; }
warning() { echo -e "\033[1;33m[Warning]\033[0m $*"; }
error() { echo -e "\033[1;31m[Error]\033[0m $*" >&2; }
success() { echo -e "\033[1;32m[Success]\033[0m $*"; }

if [ "$(id -u)" -ne 0 ] && ! command -v sudo >/dev/null; then
  echo "Ce script n√©cessite les privil√®ges root ou sudo" >&2
  exit 1
fi

run() { if [ "$(id -u)" -eq 0 ]; then bash -c "$*"; else sudo bash -c "$*"; fi }

log "üöÄ R√©paration rapide d'AirAstro"
echo

# D√©tection automatique des probl√®mes et solutions
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SERVER_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"

# Probl√®me 1: Service non d√©marr√©
log "1. V√©rification du service systemd"
if ! run "systemctl is-active --quiet airastro.service"; then
    warning "Service AirAstro non actif"
    
    # Tentative de d√©marrage simple
    log "Tentative de d√©marrage du service..."
    if run "systemctl start airastro.service" 2>/dev/null; then
        success "‚úÖ Service d√©marr√©"
    else
        log "√âchec du d√©marrage simple, analyse plus approfondie n√©cessaire"
        
        # Probl√®me 2: Application non compil√©e
        log "2. V√©rification de la compilation"
        if [ ! -f "$SERVER_DIR/dist/index.js" ]; then
            warning "Application non compil√©e"
            log "Compilation automatique..."
            
            cd "$SERVER_DIR"
            if npm run build 2>/dev/null || npx tsc 2>/dev/null; then
                success "‚úÖ Compilation r√©ussie"
            else
                error "‚ùå √âchec de la compilation"
                log "Utilisation du script de build complet..."
                if [ -f "$SCRIPT_DIR/build-server.sh" ]; then
                    "$SCRIPT_DIR/build-server.sh"
                else
                    error "Script de build non trouv√©"
                    exit 1
                fi
            fi
        fi
        
        # Probl√®me 3: D√©pendances manquantes
        log "3. V√©rification des d√©pendances"
        cd "$SERVER_DIR"
        if [ ! -d "node_modules" ]; then
            warning "D√©pendances manquantes"
            log "Installation des d√©pendances..."
            npm install
        fi
        
        # Probl√®me 4: Permissions port 80
        log "4. V√©rification des permissions"
        TARGET_USER=${SUDO_USER:-$(whoami)}
        if [ "$TARGET_USER" != "root" ]; then
            if ! sudo -u "$TARGET_USER" timeout 2 nc -l 80 >/dev/null 2>&1; then
                log "Configuration des permissions port 80"
                if [ -f "/usr/bin/node" ]; then
                    run "setcap 'cap_net_bind_service=+ep' /usr/bin/node"
                fi
            fi
        fi
        
        # Nouvelle tentative de d√©marrage
        log "5. Nouvelle tentative de d√©marrage"
        run "systemctl daemon-reload"
        if run "systemctl start airastro.service"; then
            success "‚úÖ Service d√©marr√© apr√®s r√©paration"
        else
            error "‚ùå √âchec persistant"
            log "Logs d'erreur r√©cents:"
            journalctl -u airastro.service -n 5 --no-pager | sed 's/^/   /'
            echo
            error "Utilisation du script de r√©paration compl√®te requis:"
            error "  sudo ./fix-airastro.sh"
            exit 1
        fi
    fi
else
    success "‚úÖ Service d√©j√† actif"
fi

# Probl√®me 5: Port non en √©coute
log "6. V√©rification des ports"
sleep 2
if ss -tuln | grep -q ":80\|:3000"; then
    PORT=$(ss -tuln | grep -E ":80|:3000" | head -1 | grep -o ":[0-9]*" | tr -d ':')
    success "‚úÖ Port $PORT en √©coute"
else
    warning "‚ö†Ô∏è  Aucun port HTTP d√©tect√©"
    log "Attente suppl√©mentaire pour le d√©marrage..."
    sleep 3
    if ss -tuln | grep -q ":80\|:3000"; then
        PORT=$(ss -tuln | grep -E ":80|:3000" | head -1 | grep -o ":[0-9]*" | tr -d ':')
        success "‚úÖ Port $PORT maintenant en √©coute"
    else
        warning "‚ö†Ô∏è  Service peut n√©cessiter plus de temps"
    fi
fi

# Probl√®me 6: Test HTTP
log "7. Test de connectivit√© HTTP"
if command -v curl >/dev/null; then
    sleep 2
    if curl -s --connect-timeout 5 http://localhost/api/ping >/dev/null 2>&1; then
        success "‚úÖ API r√©pond sur port 80"
    elif curl -s --connect-timeout 5 http://localhost:3000/api/ping >/dev/null 2>&1; then
        success "‚úÖ API r√©pond sur port 3000"
    else
        warning "‚ö†Ô∏è  API ne r√©pond pas encore"
        log "Cela peut √™tre normal, le service d√©marre..."
    fi
fi

# Probl√®me 7: mDNS
log "8. V√©rification mDNS"
if systemctl is-active --quiet avahi-daemon; then
    success "‚úÖ Avahi actif"
else
    warning "mDNS non actif"
    log "D√©marrage d'Avahi..."
    run "systemctl restart avahi-daemon"
fi

echo
success "üéâ R√©paration rapide termin√©e !"
echo

# R√©sum√© final
log "üìä √âtat final:"
if run "systemctl is-active --quiet airastro.service"; then
    success "‚úÖ Service AirAstro: actif"
else
    error "‚ùå Service AirAstro: inactif"
fi

if systemctl is-active --quiet avahi-daemon; then
    success "‚úÖ Service mDNS: actif"
else
    error "‚ùå Service mDNS: inactif"
fi

if ss -tuln | grep -q ":80\|:3000"; then
    PORT=$(ss -tuln | grep -E ":80|:3000" | head -1 | grep -o ":[0-9]*" | tr -d ':')
    success "‚úÖ Port HTTP: $PORT en √©coute"
else
    warning "‚ö†Ô∏è  Port HTTP: non d√©tect√©"
fi

echo
log "üîó Acc√®s AirAstro:"
if ss -tuln | grep -q ":80"; then
    log "  - http://localhost"
    log "  - http://airastro.local"
elif ss -tuln | grep -q ":3000"; then
    log "  - http://localhost:3000"
    log "  - http://airastro.local:3000"
else
    warning "  - Aucun port HTTP d√©tect√©"
fi

echo
log "üõ†Ô∏è  Si des probl√®mes persistent:"
log "  - Diagnostic complet: ./debug-airastro.sh"
log "  - R√©paration compl√®te: sudo ./fix-airastro.sh"
log "  - V√©rification mDNS: ./check-mdns.sh"
log "  - Logs en temps r√©el: journalctl -u airastro.service -f"
