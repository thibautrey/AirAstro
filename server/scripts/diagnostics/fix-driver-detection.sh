#!/bin/bash
set -e

# Script de correction automatique pour la d√©tection des drivers INDI

log() { echo -e "\033[1;32m[Fix Driver Detection]\033[0m $*"; }
warning() { echo -e "\033[1;33m[Warning]\033[0m $*"; }
error() { echo -e "\033[1;31m[Error]\033[0m $*"; }
success() { echo -e "\033[1;32m[Success]\033[0m $*"; }

log "üîß Correction automatique de la d√©tection des drivers INDI"
echo

# 1. V√©rification des r√©pertoires de recherche des drivers
log "1. V√©rification des r√©pertoires de drivers"
DRIVER_DIRS=(
    "/usr/local/bin"
    "/usr/bin"
    "/usr/local/lib/indi"
    "/usr/lib/indi"
    "/opt/indi/bin"
    "/usr/lib/x86_64-linux-gnu/indi"
)

for dir in "${DRIVER_DIRS[@]}"; do
    if [ -d "$dir" ]; then
        echo "‚úÖ R√©pertoire trouv√©: $dir"
        # Compter les drivers INDI dans ce r√©pertoire
        count=$(find "$dir" -name "indi_*" -type f -executable 2>/dev/null | wc -l)
        echo "   Drivers INDI trouv√©s: $count"

        # Lister les drivers ASI sp√©cifiquement
        asi_drivers=$(find "$dir" -name "indi_asi*" -type f -executable 2>/dev/null)
        if [ -n "$asi_drivers" ]; then
            echo "   üéØ Drivers ASI trouv√©s:"
            echo "$asi_drivers" | sed 's/^/     /'
        fi
    else
        warning "R√©pertoire manquant: $dir"
    fi
done

# 2. Recherche sp√©cifique du driver ASI
log "2. Recherche sp√©cifique du driver ASI"
echo "Recherche de tous les drivers ASI sur le syst√®me..."

# Recherche plus large
ASI_DRIVERS=$(find /usr /opt -name "indi_asi*" -type f -executable 2>/dev/null || true)
if [ -n "$ASI_DRIVERS" ]; then
    success "‚úÖ Drivers ASI trouv√©s sur le syst√®me:"
    echo "$ASI_DRIVERS" | sed 's/^/   /'

    # V√©rifier les permissions
    echo
    log "V√©rification des permissions:"
    for driver in $ASI_DRIVERS; do
        if [ -x "$driver" ]; then
            echo "   ‚úÖ $driver (ex√©cutable)"
        else
            warning "   ‚ö†Ô∏è  $driver (non ex√©cutable)"
            echo "      Correction des permissions..."
            sudo chmod +x "$driver" || error "√âchec de la correction des permissions"
        fi
    done
else
    error "‚ùå Aucun driver ASI trouv√© sur le syst√®me"
    echo "Le driver indi-asi n'est peut-√™tre pas correctement install√©"
fi

# 3. V√©rification de l'installation du paquet
log "3. V√©rification de l'installation du paquet indi-asi"
if dpkg -l | grep -q indi-asi; then
    success "‚úÖ Paquet indi-asi install√©"
    dpkg -l | grep indi-asi | sed 's/^/   /'

    # Lister les fichiers install√©s par le paquet
    echo
    log "Fichiers install√©s par le paquet indi-asi:"
    dpkg -L indi-asi | grep -E "(indi_|driver)" | head -10 | sed 's/^/   /'
else
    error "‚ùå Paquet indi-asi non install√©"
    echo "Tentative de r√©installation..."
    sudo apt-get update
    sudo apt-get install -y indi-asi
fi

# 4. Test direct du driver
log "4. Test direct du driver ASI"
if command -v indi_asi_ccd >/dev/null 2>&1; then
    success "‚úÖ Driver indi_asi_ccd trouv√© dans PATH"
    echo "   Emplacement: $(which indi_asi_ccd)"

    # Test de d√©marrage rapide
    echo "   Test de d√©marrage rapide..."
    timeout 5s indi_asi_ccd -v 2>&1 | head -5 | sed 's/^/   /' || true
else
    error "‚ùå Driver indi_asi_ccd non trouv√© dans PATH"

    # Recherche manuelle
    echo "   Recherche manuelle du driver..."
    MANUAL_SEARCH=$(find /usr /opt -name "indi_asi_ccd" -type f 2>/dev/null || true)
    if [ -n "$MANUAL_SEARCH" ]; then
        echo "   Trouv√© manuellement: $MANUAL_SEARCH"
        echo "   Ajout au PATH..."
        DRIVER_DIR=$(dirname "$MANUAL_SEARCH")
        export PATH="$PATH:$DRIVER_DIR"
        echo "   PATH mis √† jour temporairement"
    fi
fi

# 5. V√©rification des d√©pendances
log "5. V√©rification des d√©pendances ASI"
echo "V√©rification des librairies ASI..."

# V√©rifier libasi
if ldconfig -p | grep -q libasi; then
    success "‚úÖ Librairie libasi trouv√©e"
    ldconfig -p | grep libasi | sed 's/^/   /'
else
    warning "‚ö†Ô∏è  Librairie libasi non trouv√©e"
    echo "   Installation de libasi..."
    sudo apt-get install -y libasi
fi

# 6. V√©rification des permissions USB
log "6. V√©rification des permissions USB"
echo "V√©rification des r√®gles udev pour les cam√©ras ASI..."

UDEV_RULES_DIR="/etc/udev/rules.d"
ASI_RULES_FILE="$UDEV_RULES_DIR/99-asi-cameras.rules"

if [ -f "$ASI_RULES_FILE" ]; then
    success "‚úÖ R√®gles udev ASI trouv√©es"
    cat "$ASI_RULES_FILE" | sed 's/^/   /'
else
    warning "‚ö†Ô∏è  R√®gles udev ASI manquantes"
    echo "   Cr√©ation des r√®gles udev..."

    sudo tee "$ASI_RULES_FILE" > /dev/null << 'EOF'
# R√®gles udev pour les cam√©ras ZWO ASI
SUBSYSTEM=="usb", ATTRS{idVendor}=="03c3", MODE="0666", GROUP="plugdev"
SUBSYSTEM=="usb", ATTRS{idVendor}=="03c3", ATTRS{idProduct}=="120d", MODE="0666", GROUP="plugdev"
EOF

    echo "   Rechargement des r√®gles udev..."
    sudo udevadm control --reload-rules
    sudo udevadm trigger

    success "‚úÖ R√®gles udev cr√©√©es et recharg√©es"
fi

# 7. V√©rification de la cam√©ra connect√©e
log "7. V√©rification de la cam√©ra ASI120MM-S"
echo "Recherche de la cam√©ra ASI120MM-S (03c3:120d)..."

if lsusb | grep -q "03c3:120d"; then
    success "‚úÖ Cam√©ra ASI120MM-S d√©tect√©e"
    lsusb | grep "03c3:120d" | sed 's/^/   /'

    # V√©rifier les permissions
    USB_DEVICE=$(lsusb | grep "03c3:120d" | awk '{print $2 ":" $4}' | sed 's/://g')
    if [ -n "$USB_DEVICE" ]; then
        echo "   V√©rification des permissions USB..."
        ls -la /dev/bus/usb/*/* | grep -E "(003|002)" | head -5 | sed 's/^/   /'
    fi
else
    error "‚ùå Cam√©ra ASI120MM-S non d√©tect√©e"
    echo "   V√©rifiez que la cam√©ra est bien connect√©e"
fi

# 8. Mise √† jour de la base de donn√©es des drivers
log "8. Mise √† jour de la base de donn√©es des drivers"
echo "Reconstruction de la base de donn√©es des drivers install√©s..."

# Cr√©er un fichier temporaire avec tous les drivers trouv√©s
TEMP_DRIVERS="/tmp/airastro-drivers-found.txt"
echo "# Drivers INDI trouv√©s - $(date)" > "$TEMP_DRIVERS"
echo "# G√©n√©r√© automatiquement par fix-driver-detection.sh" >> "$TEMP_DRIVERS"
echo "" >> "$TEMP_DRIVERS"

for dir in "${DRIVER_DIRS[@]}"; do
    if [ -d "$dir" ]; then
        echo "# Drivers dans $dir:" >> "$TEMP_DRIVERS"
        find "$dir" -name "indi_*" -type f -executable 2>/dev/null | sed 's/^/   /' >> "$TEMP_DRIVERS" || true
        echo "" >> "$TEMP_DRIVERS"
    fi
done

echo "Base de donn√©es des drivers mise √† jour: $TEMP_DRIVERS"
cat "$TEMP_DRIVERS" | sed 's/^/   /'

# 9. Red√©marrage du service AirAstro
log "9. Red√©marrage du service AirAstro"
echo "Red√©marrage du service pour prendre en compte les modifications..."

if systemctl is-active --quiet airastro.service; then
    echo "   Arr√™t du service..."
    sudo systemctl stop airastro.service
    sleep 2
fi

echo "   D√©marrage du service..."
sudo systemctl start airastro.service

# Attendre un peu et v√©rifier l'√©tat
sleep 3
if systemctl is-active --quiet airastro.service; then
    success "‚úÖ Service AirAstro red√©marr√© avec succ√®s"
else
    error "‚ùå √âchec du red√©marrage du service"
    echo "   Logs du service:"
    journalctl -u airastro.service -n 10 --no-pager | sed 's/^/   /'
fi

echo
success "üéâ Correction termin√©e!"
echo
echo "Prochaines √©tapes:"
echo "1. V√©rifiez l'interface web d'AirAstro"
echo "2. La cam√©ra ASI120MM-S devrait maintenant √™tre d√©tect√©e"
echo "3. Si le probl√®me persiste, v√©rifiez les logs du service"
echo
echo "Commandes utiles:"
echo "- V√©rifier le service: systemctl status airastro.service"
echo "- Voir les logs: journalctl -u airastro.service -f"
echo "- Tester le driver: indi_asi_ccd -v"
echo "- Lister les cam√©ras: lsusb | grep 03c3"
