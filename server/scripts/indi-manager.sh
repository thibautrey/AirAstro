#!/bin/bash

# Script principal de r√©solution des probl√®mes INDI
# D√©tecte automatiquement le probl√®me et propose les solutions appropri√©es

set -e

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_step() {
    echo -e "${CYAN}[√âTAPE]${NC} $1"
}

# Fonction pour afficher le menu
show_menu() {
    echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${CYAN}‚ïë                    üöÄ AIRASTRO INDI MANAGER                 ‚ïë${NC}"
    echo -e "${CYAN}‚ïë                 R√©solution des probl√®mes INDI               ‚ïë${NC}"
    echo -e "${CYAN}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£${NC}"
    echo -e "${CYAN}‚ïë  1. üîç Diagnostic complet du syst√®me                        ‚ïë${NC}"
    echo -e "${CYAN}‚ïë  2. üîß R√©paration automatique (recommand√©)                  ‚ïë${NC}"
    echo -e "${CYAN}‚ïë  3. üßπ Nettoyage complet et r√©installation                  ‚ïë${NC}"
    echo -e "${CYAN}‚ïë  4. üì¶ Installation des drivers INDI                       ‚ïë${NC}"
    echo -e "${CYAN}‚ïë  5. üîÑ Mise √† jour des drivers existants                    ‚ïë${NC}"
    echo -e "${CYAN}‚ïë  6. üìã Afficher l'√©tat actuel                               ‚ïë${NC}"
    echo -e "${CYAN}‚ïë  7. üÜò Aide et documentation                                ‚ïë${NC}"
    echo -e "${CYAN}‚ïë  0. üö™ Quitter                                              ‚ïë${NC}"
    echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

# Fonction pour obtenir le r√©pertoire du script
get_script_dir() {
    cd "$(dirname "${BASH_SOURCE[0]}")"
    pwd
}

# Fonction pour v√©rifier les pr√©requis
check_prerequisites() {
    local script_dir=$(get_script_dir)

    # V√©rifier que les scripts existent
    local required_scripts=(
        "diagnose-indi-system.sh"
        "fix-indi-repository.sh"
        "clean-indi-system.sh"
        "install-indi-drivers.sh"
    )

    for script in "${required_scripts[@]}"; do
        if [[ ! -f "$script_dir/$script" ]]; then
            log_error "Script manquant: $script"
            return 1
        fi

        # Rendre le script ex√©cutable
        chmod +x "$script_dir/$script"
    done

    # V√©rifier sudo
    if ! sudo -n true 2>/dev/null; then
        log_error "Ce script n√©cessite des privil√®ges sudo"
        return 1
    fi

    return 0
}

# Fonction de diagnostic rapide
quick_diagnosis() {
    log_info "üîç Diagnostic rapide..."

    local issues=0

    # V√©rifier le d√©p√¥t INDI
    if [[ ! -f /etc/apt/sources.list.d/indi.list ]]; then
        log_warning "‚ùå D√©p√¥t INDI non configur√©"
        ((issues++))
    fi

    # V√©rifier les packages disponibles
    local available_packages=$(apt-cache search "^indi-" 2>/dev/null | wc -l)
    if [[ $available_packages -eq 0 ]]; then
        log_warning "‚ùå Aucun package INDI disponible"
        ((issues++))
    fi

    # V√©rifier les packages install√©s
    local installed_packages=$(dpkg -l | grep "^ii.*indi-" | wc -l)
    if [[ $installed_packages -eq 0 ]]; then
        log_warning "‚ùå Aucun package INDI install√©"
        ((issues++))
    fi

    return $issues
}

# Fonction pour recommander une action
recommend_action() {
    log_info "üéØ Analyse et recommandation..."

    if quick_diagnosis; then
        log_success "‚úÖ Syst√®me semble fonctionnel"
        echo "   Recommandation: V√©rifiez avec le diagnostic complet (option 1)"
        return 0
    else
        log_warning "‚ö†Ô∏è Probl√®mes d√©tect√©s"
        echo "   Recommandation: Utilisez la r√©paration automatique (option 2)"
        return 1
    fi
}

# Ex√©cuter le diagnostic complet
run_full_diagnosis() {
    log_step "1. Ex√©cution du diagnostic complet"
    local script_dir=$(get_script_dir)

    if [[ -f "$script_dir/diagnose-indi-system.sh" ]]; then
        "$script_dir/diagnose-indi-system.sh"
        return $?
    else
        log_error "Script de diagnostic non trouv√©"
        return 1
    fi
}

# Ex√©cuter la r√©paration automatique
run_auto_repair() {
    log_step "2. Ex√©cution de la r√©paration automatique"
    local script_dir=$(get_script_dir)

    if [[ -f "$script_dir/fix-indi-repository.sh" ]]; then
        "$script_dir/fix-indi-repository.sh"
        return $?
    else
        log_error "Script de r√©paration non trouv√©"
        return 1
    fi
}

# Ex√©cuter le nettoyage complet
run_full_cleanup() {
    log_step "3. Ex√©cution du nettoyage complet"
    local script_dir=$(get_script_dir)

    if [[ -f "$script_dir/clean-indi-system.sh" ]]; then
        "$script_dir/clean-indi-system.sh"
        local result=$?

        if [[ $result -eq 0 ]]; then
            log_info "Nettoyage termin√©, lancement de la r√©paration..."
            run_auto_repair
        fi

        return $result
    else
        log_error "Script de nettoyage non trouv√©"
        return 1
    fi
}

# Ex√©cuter l'installation des drivers
run_driver_installation() {
    log_step "4. Installation des drivers INDI"
    local script_dir=$(get_script_dir)

    if [[ -f "$script_dir/install-indi-drivers.sh" ]]; then
        "$script_dir/install-indi-drivers.sh"
        return $?
    else
        log_error "Script d'installation non trouv√©"
        return 1
    fi
}

# Ex√©cuter la mise √† jour des drivers
run_driver_update() {
    log_step "5. Mise √† jour des drivers INDI"
    local script_dir=$(get_script_dir)

    if [[ -f "$script_dir/install-indi-drivers.sh" ]]; then
        "$script_dir/install-indi-drivers.sh" update
        return $?
    else
        log_error "Script d'installation non trouv√©"
        return 1
    fi
}

# Afficher l'√©tat actuel
show_current_status() {
    log_step "6. √âtat actuel du syst√®me"

    echo ""
    echo -e "${CYAN}üìä R√âSUM√â DE L'√âTAT${NC}"
    echo "$(printf '‚îÄ%.0s' {1..40})"

    # D√©p√¥t INDI
    if [[ -f /etc/apt/sources.list.d/indi.list ]]; then
        echo -e "D√©p√¥t INDI:     ${GREEN}‚úÖ Configur√©${NC}"
    else
        echo -e "D√©p√¥t INDI:     ${RED}‚ùå Non configur√©${NC}"
    fi

    # Packages disponibles
    local available=$(apt-cache search "^indi-" 2>/dev/null | wc -l)
    if [[ $available -gt 0 ]]; then
        echo -e "Packages dispo: ${GREEN}‚úÖ $available disponibles${NC}"
    else
        echo -e "Packages dispo: ${RED}‚ùå Aucun disponible${NC}"
    fi

    # Packages install√©s
    local installed=$(dpkg -l | grep "^ii.*indi-" | wc -l)
    if [[ $installed -gt 0 ]]; then
        echo -e "Packages inst.: ${GREEN}‚úÖ $installed install√©s${NC}"
    else
        echo -e "Packages inst.: ${YELLOW}‚ö†Ô∏è Aucun install√©${NC}"
    fi

    # Service INDI
    if systemctl is-active indi.service > /dev/null 2>&1; then
        echo -e "Service INDI:   ${GREEN}‚úÖ Actif${NC}"
    else
        echo -e "Service INDI:   ${YELLOW}‚ö†Ô∏è Inactif${NC}"
    fi

    # Permissions USB
    if [[ -f /etc/udev/rules.d/99-astro-devices.rules ]]; then
        echo -e "Permissions:    ${GREEN}‚úÖ Configur√©es${NC}"
    else
        echo -e "Permissions:    ${YELLOW}‚ö†Ô∏è Non configur√©es${NC}"
    fi

    echo ""
}

# Afficher l'aide
show_help() {
    log_step "7. Aide et documentation"

    echo ""
    echo -e "${CYAN}üÜò AIDE ET DOCUMENTATION${NC}"
    echo "$(printf '‚ïê%.0s' {1..50})"
    echo ""
    echo -e "${YELLOW}PROBL√àME ACTUEL:${NC}"
    echo "  L'erreur 'apt-key is deprecated' et 'no valid OpenPGP data found'"
    echo "  indique que l'ancienne m√©thode d'ajout de cl√©s GPG ne fonctionne plus."
    echo ""
    echo -e "${YELLOW}SOLUTIONS PROPOS√âES:${NC}"
    echo "  1. ${GREEN}R√©paration automatique${NC} (recommand√©e)"
    echo "     - Corrige automatiquement les probl√®mes de d√©p√¥t"
    echo "     - Utilise les nouvelles m√©thodes s√©curis√©es"
    echo "     - Pr√©serve les configurations existantes"
    echo ""
    echo "  2. ${GREEN}Nettoyage complet${NC} (si r√©paration √©choue)"
    echo "     - Supprime toutes les configurations INDI"
    echo "     - Repart sur une base propre"
    echo "     - Recommand√© en cas de probl√®mes multiples"
    echo ""
    echo -e "${YELLOW}ORDRE D'EX√âCUTION RECOMMAND√â:${NC}"
    echo "  1. Diagnostic complet (option 1)"
    echo "  2. R√©paration automatique (option 2)"
    echo "  3. Installation des drivers (option 4)"
    echo "  4. V√©rification finale (option 6)"
    echo ""
    echo -e "${YELLOW}SCRIPTS DISPONIBLES:${NC}"
    echo "  - diagnose-indi-system.sh  : Diagnostic complet"
    echo "  - fix-indi-repository.sh   : R√©paration automatique"
    echo "  - clean-indi-system.sh     : Nettoyage complet"
    echo "  - install-indi-drivers.sh  : Installation des drivers"
    echo ""
    echo -e "${YELLOW}AIDE SUPPL√âMENTAIRE:${NC}"
    echo "  - Documentation: README.md dans le dossier server/"
    echo "  - Logs: Les scripts affichent des messages d√©taill√©s"
    echo "  - Support: V√©rifiez les issues sur le projet GitHub"
    echo ""
}

# Fonction principale
main() {
    # V√©rifier les pr√©requis
    if ! check_prerequisites; then
        log_error "Impossible de continuer sans les pr√©requis"
        exit 1
    fi

    # Boucle principale du menu
    while true; do
        clear
        show_menu
        recommend_action

        echo ""
        echo -e "${CYAN}Choisissez une option (0-7):${NC} "
        read -r choice

        case $choice in
            1)
                echo ""
                run_full_diagnosis
                ;;
            2)
                echo ""
                run_auto_repair
                ;;
            3)
                echo ""
                run_full_cleanup
                ;;
            4)
                echo ""
                run_driver_installation
                ;;
            5)
                echo ""
                run_driver_update
                ;;
            6)
                echo ""
                show_current_status
                ;;
            7)
                echo ""
                show_help
                ;;
            0)
                echo ""
                log_info "üö™ Au revoir!"
                exit 0
                ;;
            *)
                echo ""
                log_error "Option invalide: $choice"
                ;;
        esac

        echo ""
        echo -e "${CYAN}Appuyez sur Entr√©e pour continuer...${NC}"
        read -r
    done
}

# Ex√©cuter le script principal
main "$@"
