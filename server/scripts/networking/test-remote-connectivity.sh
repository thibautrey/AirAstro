#!/bin/bash
set -e

# Script de diagnostic mDNS √† distance pour AirAstro
# Ce script peut √™tre ex√©cut√© depuis un autre appareil pour tester la connectivit√©

TARGET_HOST="${1:-airastro.local}"
TIMEOUT=10

log() { echo -e "\033[1;32m[Remote Test]\033[0m $*"; }
warning() { echo -e "\033[1;33m[Warning]\033[0m $*"; }
error() { echo -e "\033[1;31m[Error]\033[0m $*"; }
success() { echo -e "\033[1;32m[Success]\033[0m $*"; }

log "Test de connectivit√© √† AirAstro : $TARGET_HOST"
echo

# Test 1: R√©solution DNS/mDNS
log "1. Test de r√©solution DNS/mDNS"
if command -v dig >/dev/null; then
    IP=$(timeout $TIMEOUT dig +short "$TARGET_HOST" 2>/dev/null | head -n1)
    if [ -n "$IP" ]; then
        success "‚úÖ $TARGET_HOST r√©sout vers $IP"
    else
        error "‚ùå Impossible de r√©soudre $TARGET_HOST"
        exit 1
    fi
elif command -v nslookup >/dev/null; then
    if timeout $TIMEOUT nslookup "$TARGET_HOST" >/dev/null 2>&1; then
        IP=$(nslookup "$TARGET_HOST" 2>/dev/null | grep -A1 "Name:" | grep "Address:" | cut -d' ' -f2)
        success "‚úÖ $TARGET_HOST r√©sout vers $IP"
    else
        error "‚ùå Impossible de r√©soudre $TARGET_HOST"
        exit 1
    fi
else
    warning "‚ö†Ô∏è  Aucun outil de r√©solution DNS disponible"
fi

# Test 2: Ping
log "2. Test de ping"
if command -v ping >/dev/null; then
    if ping -c 1 -W $TIMEOUT "$TARGET_HOST" >/dev/null 2>&1; then
        success "‚úÖ $TARGET_HOST r√©pond au ping"
    else
        error "‚ùå $TARGET_HOST ne r√©pond pas au ping"
        exit 1
    fi
else
    warning "‚ö†Ô∏è  Commande ping non disponible"
fi

# Test 3: Connectivit√© HTTP
log "3. Test de connectivit√© HTTP"
if command -v curl >/dev/null; then
    HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout $TIMEOUT "http://$TARGET_HOST/api/ping" 2>/dev/null)
    if [ "$HTTP_STATUS" = "200" ]; then
        success "‚úÖ Service HTTP AirAstro r√©pond (200 OK)"
    else
        error "‚ùå Service HTTP AirAstro ne r√©pond pas (code: $HTTP_STATUS)"
        exit 1
    fi
elif command -v wget >/dev/null; then
    if timeout $TIMEOUT wget -q --spider "http://$TARGET_HOST/api/ping" 2>/dev/null; then
        success "‚úÖ Service HTTP AirAstro r√©pond"
    else
        error "‚ùå Service HTTP AirAstro ne r√©pond pas"
        exit 1
    fi
else
    warning "‚ö†Ô∏è  Aucun outil HTTP disponible (curl/wget)"
fi

# Test 4: Test de l'interface web
log "4. Test de l'interface web"
if command -v curl >/dev/null; then
    CONTENT=$(curl -s --connect-timeout $TIMEOUT "http://$TARGET_HOST/" 2>/dev/null | head -c 100)
    if echo "$CONTENT" | grep -qi "airastro\|html\|<!DOCTYPE"; then
        success "‚úÖ Interface web AirAstro disponible"
    else
        warning "‚ö†Ô∏è  Interface web pourrait ne pas √™tre disponible"
    fi
fi

# Test 5: D√©couverte de services mDNS (si disponible)
log "5. Test de d√©couverte de services mDNS"
if command -v avahi-browse >/dev/null; then
    success "‚úÖ avahi-browse disponible"
    log "   Services HTTP d√©couverts :"
    timeout 3 avahi-browse -t _http._tcp --resolve 2>/dev/null | grep -E "(hostname|address|port)" | head -5 || echo "   Aucun service trouv√©"
elif command -v dns-sd >/dev/null; then
    success "‚úÖ dns-sd disponible (macOS/iOS)"
    log "   Services HTTP d√©couverts :"
    timeout 3 dns-sd -B _http._tcp 2>/dev/null | head -5 || echo "   Aucun service trouv√©"
else
    warning "‚ö†Ô∏è  Aucun outil de d√©couverte mDNS disponible"
fi

# Test 6: Informations syst√®me (si SSH disponible)
log "6. Test de connectivit√© SSH (optionnel)"
if command -v ssh >/dev/null; then
    if timeout 3 ssh -o BatchMode=yes -o ConnectTimeout=3 "$TARGET_HOST" 'echo test' >/dev/null 2>&1; then
        success "‚úÖ SSH disponible sur $TARGET_HOST"
    else
        warning "‚ö†Ô∏è  SSH non disponible ou non configur√©"
    fi
fi

echo
success "üéâ Tous les tests de connectivit√© sont r√©ussis !"
echo
log "AirAstro est accessible via :"
log "  - Interface web : http://$TARGET_HOST"
log "  - API REST : http://$TARGET_HOST/api/"
log "  - Ping d'√©tat : http://$TARGET_HOST/api/ping"
echo
log "Pour plus d'informations, consultez la documentation :"
log "  http://$TARGET_HOST/docs (si disponible)"
