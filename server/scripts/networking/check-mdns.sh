#!/bin/bash
set -e

# Script de v√©rification et d√©pannage mDNS pour AirAstro

log() { echo -e "\033[1;32m[mDNS Check]\033[0m $*"; }
warning() { echo -e "\033[1;33m[Warning]\033[0m $*"; }
error() { echo -e "\033[1;31m[Error]\033[0m $*"; }

log "V√©rification de la configuration mDNS d'AirAstro"
echo

# V√©rification d'Avahi
log "1. √âtat du service Avahi"
if systemctl is-active --quiet avahi-daemon; then
    echo "‚úÖ Service Avahi actif"
    echo "   Version: $(avahi-daemon --version 2>/dev/null | head -n1)"
else
    error "‚ùå Service Avahi inactif"
    echo "   Pour le red√©marrer: sudo systemctl restart avahi-daemon"
fi

# V√©rification du hostname
log "2. Configuration du hostname"
CURRENT_HOSTNAME=$(hostname)
if [ "$CURRENT_HOSTNAME" = "airastro" ]; then
    echo "‚úÖ Hostname configur√©: $CURRENT_HOSTNAME"
else
    warning "‚ö†Ô∏è  Hostname actuel: $CURRENT_HOSTNAME (recommand√©: airastro)"
fi

# V√©rification du fichier de service Avahi
log "3. Service Avahi AirAstro"
AVAHI_SERVICE="/etc/avahi/services/airastro.service"
if [ -f "$AVAHI_SERVICE" ]; then
    echo "‚úÖ Fichier de service trouv√©: $AVAHI_SERVICE"
else
    error "‚ùå Fichier de service manquant: $AVAHI_SERVICE"
fi

# Test de r√©solution mDNS
log "4. Test de r√©solution mDNS"
if command -v avahi-resolve-host-name >/dev/null; then
    if timeout 5 avahi-resolve-host-name airastro.local >/dev/null 2>&1; then
        IP=$(avahi-resolve-host-name airastro.local 2>/dev/null | cut -f2)
        echo "‚úÖ airastro.local r√©sout vers: $IP"
    else
        warning "‚ö†Ô∏è  airastro.local ne r√©sout pas"
    fi

    if timeout 5 avahi-resolve-host-name $(hostname).local >/dev/null 2>&1; then
        IP=$(avahi-resolve-host-name $(hostname).local 2>/dev/null | cut -f2)
        echo "‚úÖ $(hostname).local r√©sout vers: $IP"
    else
        warning "‚ö†Ô∏è  $(hostname).local ne r√©sout pas"
    fi
else
    error "‚ùå avahi-resolve-host-name non trouv√©"
fi

# V√©rification des services annonc√©s
log "5. Services mDNS annonc√©s"
if command -v avahi-browse >/dev/null; then
    echo "Services HTTP d√©tect√©s:"
    timeout 3 avahi-browse -t _http._tcp --resolve 2>/dev/null | grep -E "(hostname|address|port)" | head -10 || echo "   Aucun service HTTP d√©tect√©"

    echo
    echo "Services SSH d√©tect√©s:"
    timeout 3 avahi-browse -t _ssh._tcp --resolve 2>/dev/null | grep -E "(hostname|address|port)" | head -10 || echo "   Aucun service SSH d√©tect√©"
else
    error "‚ùå avahi-browse non trouv√©"
fi

# V√©rification de la connectivit√© r√©seau
log "6. Connectivit√© r√©seau"
INTERFACES=$(ip link show | grep -E "^[0-9]+:" | grep -v "lo:" | cut -d: -f2 | tr -d ' ')
for iface in $INTERFACES; do
    if ip addr show "$iface" | grep -q "inet "; then
        IP=$(ip addr show "$iface" | grep "inet " | head -n1 | awk '{print $2}' | cut -d/ -f1)
        STATE=$(cat "/sys/class/net/$iface/operstate" 2>/dev/null || echo "unknown")
        echo "‚úÖ Interface $iface: $IP (√©tat: $STATE)"
    else
        echo "‚ùå Interface $iface: pas d'IP"
    fi
done

# V√©rification du port 80
log "7. V√©rification du service AirAstro"
if ss -tuln | grep -q ":80 "; then
    echo "‚úÖ Port 80 en √©coute"
elif ss -tuln | grep -q ":3000 "; then
    echo "‚úÖ Port 3000 en √©coute (port alternatif)"
else
    warning "‚ö†Ô∏è  Aucun port HTTP en √©coute (80 ou 3000)"
    echo "   V√©rifiez que le service AirAstro est d√©marr√©"
    echo "   Pour diagnostic: ./debug-airastro.sh"
    echo "   Pour r√©paration: sudo ./fix-airastro.sh"
fi

# Test de connectivit√© HTTP
log "8. Test de connectivit√© HTTP"
if command -v curl >/dev/null; then
    # Test port 80
    if curl -s --connect-timeout 3 http://localhost/api/ping >/dev/null 2>&1; then
        echo "‚úÖ Service HTTP local r√©pond (port 80)"
    elif curl -s --connect-timeout 3 http://localhost:3000/api/ping >/dev/null 2>&1; then
        echo "‚úÖ Service HTTP local r√©pond (port 3000)"
    else
        warning "‚ö†Ô∏è  Service HTTP local ne r√©pond pas"
        echo "   Essayez: sudo ./fix-airastro.sh"
    fi

    # Test mDNS
    if curl -s --connect-timeout 3 http://airastro.local/api/ping >/dev/null 2>&1; then
        echo "‚úÖ Service HTTP via mDNS r√©pond"
    elif curl -s --connect-timeout 3 http://airastro.local:3000/api/ping >/dev/null 2>&1; then
        echo "‚úÖ Service HTTP via mDNS r√©pond (port 3000)"
    else
        warning "‚ö†Ô∏è  Service HTTP via mDNS ne r√©pond pas"
    fi
else
    warning "‚ö†Ô∏è  curl non install√©, impossible de tester HTTP"
fi

echo
log "Diagnostic termin√©"

# Suggestions de d√©pannage
echo
log "üîß Outils de d√©pannage disponibles:"
echo "‚Ä¢ Diagnostic AirAstro: ./debug-airastro.sh"
echo "‚Ä¢ R√©paration automatique: sudo ./fix-airastro.sh"
echo "‚Ä¢ Test connectivit√© √† distance: ./test-remote-connectivity.sh"
echo
log "Suggestions de d√©pannage en cas de probl√®me:"
echo "1. Diagnostic complet du service: ./debug-airastro.sh"
echo "2. R√©paration automatique: sudo ./fix-airastro.sh"
echo "3. Red√©marrer Avahi: sudo systemctl restart avahi-daemon"
echo "4. Reconfigurer mDNS: sudo ./configure-mdns.sh"
echo "5. Red√©marrer AirAstro: sudo systemctl restart airastro"
echo "6. Red√©marrer le r√©seau: sudo systemctl restart networking"
echo "7. Red√©marrer compl√®tement le syst√®me"
